{"changed":true,"filter":false,"title":"runLogRegressTop10.py","tooltip":"/ee_boot/runLogRegressTop10.py","value":"\n#Import modules\nimport json\nimport pickle\nimport collections\nimport numpy as np\nimport scipy.stats as st\nfrom scipy.stats.stats import pearsonr\nimport scipy.stats.mstats as ssm\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom pylab import * #i know I shouldn't do this\nfrom matplotlib import cm\nimport utils.funcs as funcs\n\n#Import project files\nimport utils.bootstrap as bs\nimport utils.observed as os\n\n\nimport sys\nif len(sys.argv[1]) == 1:  \n    datafile = '../data_by_cookie_slim.json'\n    outputFolder = '.'\n    outputSuffix = ''\n    iterations = 10\n    epochmult = 4\nelse:\n    datafile = sys.argv[0]\n    outputFolder = sys.argv[1]\n    outputSuffix = sys.argv[2]\n    iterations = sys.argv[3]\n    epochmult = sys.argv[4]\n\n#Load data\nprint 'Running log regression analysis of variance vs mean, 2nd order'\noutputFolder = outputFolder +  + '/logRegressTop10'\ndata = funcs.loadData(datafile)\n#properData  = [[data[k][l][0] for l in collections.OrderedDict(sorted(data[k].items()))] for k in data]\n#Process X = polyfit regression test\nprocessX = lambda x,x_plays: np.polyfit(x_plays, x, 2, full = True)[1]\n#Preprocessing = taking logarithm of all data points\npreprocess = lambda x: [np.log(k) for k in x]\n\nwindowSizes1 = range(5,30,5)    # Sizes of attempt group 1\nwindowSizes2 = range(5,30,5)    # Sizes of attempt group 2\n\nfuncs.ensurePath(outputFolder)\n\nprint \"OBSERVED DATA\"\nos.runObs(data, windowSizes1, windowSizes2, outputFolder, rankFilter = 90, preprocess = preprocess, processX = processX)\n#execfile(\"sup_ee_boot_varxy.py\")\n\nprint \"BOOTSTRAP\"\nbootrec = bs.runBoot(data, iterations, windowSizes1, windowSizes2, rankFilter = 90, preprocess = preprocess, processX = processX)\n\npickle.dump(bootrec,open(outputFolder + '/logRegress' + outputSuffix + '.p', 'wb'))\n#execfile(\"sup_ee_observed_varxy.py\")\n\n#\u0001funcs.drawGraphs(bootrec, outfolder, windowSizes1, windowSizes2)","undoManager":{"mark":31,"position":32,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":41,"column":0},"end":{"row":41,"column":1}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":41,"column":0},"end":{"row":41,"column":65}},"text":"#funcs.drawGraphs(bootrec, outfolder, windowSizes1, windowSizes2)"},{"action":"removeLines","range":{"start":{"row":19,"column":0},"end":{"row":41,"column":0}},"nl":"\n","lines":["#Load data","print \"loading data\"","data = funcs.loadData('/home/erwin/workspace/ee_bootstrap/data_by_cookie.json')","","outfolder = 'files/LogRegress'","#properData  = [[data[k][l][0] for l in collections.OrderedDict(sorted(data[k].items()))] for k in data]","#Process X = polyfit regression test","processX = lambda x,x_plays: np.polyfit(x_plays, x, 2, full = True)[1]","#Preprocessing = taking logarithm of all data points","preprocess = lambda x: [np.log(k) for k in x]","","windowSizes1 = range(5,30,5)    # Sizes of attempt group 1","windowSizes2 = range(5,30,5)    # Sizes of attempt group 2","","print \"OBSERVED DATA\"","os.runObs(data, windowSizes1, windowSizes2, outfolder, rankFilter = 90, preprocess = preprocess, processX = processX)","#execfile(\"sup_ee_boot_varxy.py\")","","print \"BOOTSTRAP\"","bootrec = bs.runBoot(data, 20, windowSizes1, windowSizes2, rankFilter = 90, preprocess = preprocess, processX = processX)","#execfile(\"sup_ee_observed_varxy.py\")",""]},{"action":"insertText","range":{"start":{"row":19,"column":0},"end":{"row":20,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":20,"column":0},"end":{"row":59,"column":0}},"lines":["import sys","if len(sys.argv[1]) == 1:  ","    datafile = '../data_by_cookie_slim.json'","    outputFolder = '.'","    outputSuffix = ''","    iterations = 10","    epochmult = 4","else:","    datafile = sys.argv[0]","    outputFolder = sys.argv[1]","    outputSuffix = sys.argv[2]","    iterations = sys.argv[3]","    epochmult = sys.argv[4]","","#Load data","print 'Running log regression analysis of variance vs mean, 2nd order'","outputFolder = outputFolder +  + '/logRegress'","data = funcs.loadData(datafile)","#properData  = [[data[k][l][0] for l in collections.OrderedDict(sorted(data[k].items()))] for k in data]","#Process X = polyfit regression test","processX = lambda x,x_plays: np.polyfit(x_plays, x, 2, full = True)[1]","#Preprocessing = taking logarithm of all data points","preprocess = lambda x: [np.log(k) for k in x]","","windowSizes1 = range(5,30,5)    # Sizes of attempt group 1","windowSizes2 = range(5,30,5)    # Sizes of attempt group 2","","funcs.ensurePath(outputFolder)","","print \"OBSERVED DATA\"","os.runObs(data, windowSizes1, windowSizes2, outputFolder, preprocess = preprocess, processX = processX)","#execfile(\"sup_ee_boot_varxy.py\")","","print \"BOOTSTRAP\"","bootrec = bs.runBoot(data, iterations, windowSizes1, windowSizes2, preprocess = preprocess, processX = processX)","","pickle.dump(bootrec,open(outputFolder + '/logRegress' + outputSuffix + '.p', 'wb'))","#execfile(\"sup_ee_observed_varxy.py\")",""]},{"action":"insertText","range":{"start":{"row":59,"column":0},"end":{"row":59,"column":65}},"text":"#funcs.drawGraphs(bootrec, outfolder, windowSizes1, windowSizes2)"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":65},"end":{"row":54,"column":66}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":66},"end":{"row":54,"column":67}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":67},"end":{"row":54,"column":68}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":68},"end":{"row":54,"column":69}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":69},"end":{"row":54,"column":70}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":70},"end":{"row":54,"column":71}},"text":"k"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":71},"end":{"row":54,"column":72}},"text":"F"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":72},"end":{"row":54,"column":73}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":73},"end":{"row":54,"column":74}},"text":"l"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":74},"end":{"row":54,"column":75}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":75},"end":{"row":54,"column":76}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":76},"end":{"row":54,"column":77}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":77},"end":{"row":54,"column":78}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":78},"end":{"row":54,"column":79}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":79},"end":{"row":54,"column":80}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":80},"end":{"row":54,"column":81}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":81},"end":{"row":54,"column":82}},"text":"-"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":54,"column":81},"end":{"row":54,"column":82}},"text":"-"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":54,"column":80},"end":{"row":54,"column":81}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":80},"end":{"row":54,"column":81}},"text":"9"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":81},"end":{"row":54,"column":82}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":57},"end":{"row":50,"column":73}},"text":" rankFilter = 90"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":73},"end":{"row":50,"column":74}},"text":","}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":50,"column":57},"end":{"row":50,"column":58}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":57},"end":{"row":50,"column":58}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":45},"end":{"row":36,"column":46}},"text":"T"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":46},"end":{"row":36,"column":47}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":47},"end":{"row":36,"column":48}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":48},"end":{"row":36,"column":49}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":49},"end":{"row":36,"column":50}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":59,"column":1},"end":{"row":59,"column":2}},"text":"\u0001"}]}]]},"ace":{"folds":[],"scrolltop":444,"scrollleft":0,"selection":{"start":{"row":59,"column":2},"end":{"row":59,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":36,"state":"start","mode":"ace/mode/python"}},"timestamp":1408713004003}