{"changed":true,"filter":false,"title":"sup_attempts_vs_avscore.py","tooltip":"/sup_attempts_vs_avscore.py","value":"savefig('explore_exploit_scatterheatmap.png', dpi=300, facecolor='w', edgecolor='w',\r\n        orientation='portrait', papertype=None, format=None,\r\n        transparent=False, bbox_inches='tight', pad_inches=0.1) \r\nsavefig('explore_exploit_scatterheatmap.png', dpi=300, facecolor='w', edgecolor='w',\r\n        orientation='portrait', papertype=None, format=None,\r\n        transparent=False, bbox_inches='tight', pad_inches=0.1) \r\nsavefig('explore_exploit_scatterheatmap.png', dpi=300, facecolor='w', edgecolor='w',\r\n        orientation='portrait', papertype=None, format=None,\r\n        transparent=False, bbox_inches='tight', pad_inches=0.1) \r\nsavefig('explore_exploit_scatterheatmap.png', dpi=300, facecolor='w', edgecolor='w',\r\n        orientation='portrait', papertype=None, format=None,\r\n        transparent=False, bbox_inches='tight', pad_inches=0.1) \r\nsavefig('explore_exploit_scatterheatmap.png', dpi=300, facecolor='w', edgecolor='w',\r\n        orientation='portrait', papertype=None, format=None,\r\n        transparent=False, bbox_inches='tight', pad_inches=0.1) \r\n#make Figure 2\r\n#and some others\r\n\r\n#required libraries\r\nimport numpy as np  # NumPy (multidimensional arrays, linear algebra, ...)\r\n#from math import * #not needed if you're in spyder\r\nfrom math import sqrt\r\nimport json\r\nimport pickle\r\n#import matplotlib as mpl         # Matplotlib (2D/3D plotting library)\r\nimport matplotlib.pyplot as plt  # Matplotlib's pyplot: MATLAB-like syntax\r\n#from pylab import *              # Matplotlib's pylab interface\r\n\r\ngeneratepaperfigs=1 # toggle this to 1 to save figures in manuscript dir\r\n\r\n# ------------------------------------------------\r\n# import data from json\r\nprint \"loading data\"\r\nfh=open('data_by_cookie.json')\r\ndata=json.load(fh)\r\n\r\n#-------------------------------------------------\r\n#FIRST - some rude characterisation\r\n#-------------------------------------------------\r\n#\r\n#\r\nprint \"organising data\"\r\n#1. Attempt number by average score\r\n#\r\n#collect scores for each attempt number\r\n#\r\n# make holding variable, a dictionary with keys 00001....00030\r\navg_score = {'%.5d'%(i+1):[] for i in range(100)}\r\n\r\n## here is the verbose way of doing the above\r\n#for i in range(10):\r\n#\tattempt=str(i+1)\r\n#\tavg_score[attempt] = []\r\n\r\n#now look through dictionary, and extract score for each attempt number\r\n#for which there is a position in the avg_score variable\r\nfor cookie in data:\r\n\tfor attempt in avg_score:\r\n\t\ttry:\r\n\t\t\tscore = data[cookie][attempt][0]\r\n\t\texcept KeyError:\r\n\t\t\tcontinue\r\n           #if there is a score for that attempt, add it to the record\r\n\t\tavg_score[attempt].append(score)\r\n\r\n    \r\n#-------------------------------------------------\r\n# now calculate some statistics by attempt number\r\n#\r\n# holding vars\r\navg={} #average\r\nsterr={} #standard error\r\ncountp={} #count\r\n\r\nfor attempt in avg_score:\r\n    avg[attempt]=sum(avg_score[attempt])/len(avg_score[attempt])\r\n    sterr[attempt]=np.std(avg_score[attempt])/sqrt(len(avg_score[attempt]))\r\n    countp[attempt]=len(avg_score[attempt])\r\n\r\n#but the result is a dict, so we need to unpack to plot\r\n\r\n# -------------method 1 -------------\r\n#    \r\n## this gets the keys of your dictionary\r\n#attempt_number = avg.keys()\r\n## this gets the score in the same order as the keys for plotting\r\n#average_score = [avg[k] for k in attempt_number]\r\n## this converts each key to an int\r\n#attempt_number = [int(a) for a in attempt_number]\r\n## then you can plot!\r\n#plot(attempt_number, average_score,'.')\r\n\r\n#------------ method 2 -------------\r\n#There's a quicker way, and uses more python magic:\r\n\r\n# get the data all at once, in order\r\nattempt_number, average_score = zip(*avg.items())\r\nattempt_numbers,std_err=zip(*sterr.items())\r\nattempt_numbers,attempt_count=zip(*countp.items())\r\n\r\n# convert the attempt numbers to integers\r\nattempt_number = [int(a) for a in attempt_number]\r\n\r\n# save the data \r\npickle.dump(attempt_number, open('save_a1_attempt_number.p', 'wb'))\r\npickle.dump(average_score, open('save_a1_average_score.p', 'wb'))\r\n\r\n\r\n\r\n#---------------------------------------------------\r\n#now we plot\r\n#---------------------------------------------------\r\nprint \"saving graphs\"\r\n\r\n# attempt number vs avg score \r\nplt.errorbar(attempt_number, average_score, yerr=std_err, fmt='ro')\r\nplt.xlabel('attempt number')\r\nplt.ylabel('average score')\r\nplt.savefig('figure2.png', dpi=None, facecolor='w', edgecolor='w',\r\n        orientation='portrait', papertype=None, format=None,\r\n        transparent=False, bbox_inches=None, pad_inches=0.1)\r\n\r\n\r\nif generatepaperfigs:\r\n    plt.savefig('../cogsci13/figures/avs.png', dpi=300, facecolor='w', edgecolor='w',\r\n        orientation='portrait', papertype=None, format=None,\r\n        transparent=False, bbox_inches=None,savefig('../cogsci13/figures/a5_e-e_heatscatter.png', dpi=300, facecolor='w', edgecolor='w',\r\n        orientation='portrait', papertype=None, format=None,\r\n        transparent=False, bbox_inches='tight', pad_inches=0.1)  pad_inches=0.1)\r\n        \r\n        \r\n# attempt number vs record length\r\nplt.clf()\r\nplt.plot(attempt_number,attempt_count,'.')\r\nplt.xlabel('attempt number')\r\nplt.ylabel('plays')\r\nplt.savefig('count.png', dpi=None, facecolor='w', edgecolor='w',\r\n        orientation='portrait', papertype=None, format=None,\r\n        transparent=False, bbox_inches=None, pad_inches=0.1)\r\n \r\n    \r\n    ","undoManager":{"mark":-1,"position":4,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":84}},"text":"savefig('explore_exploit_scatterheatmap.png', dpi=300, facecolor='w', edgecolor='w',"},{"action":"insertText","range":{"start":{"row":0,"column":84},"end":{"row":1,"column":0}},"text":"\r\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":3,"column":0}},"lines":["        orientation='portrait', papertype=None, format=None,","        transparent=False, bbox_inches='tight', pad_inches=0.1) "]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":3,"column":84}},"text":"savefig('explore_exploit_scatterheatmap.png', dpi=300, facecolor='w', edgecolor='w',"},{"action":"insertText","range":{"start":{"row":3,"column":84},"end":{"row":4,"column":0}},"text":"\r\n"},{"action":"insertLines","range":{"start":{"row":4,"column":0},"end":{"row":6,"column":0}},"lines":["        orientation='portrait', papertype=None, format=None,","        transparent=False, bbox_inches='tight', pad_inches=0.1) "]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":0},"end":{"row":6,"column":84}},"text":"savefig('explore_exploit_scatterheatmap.png', dpi=300, facecolor='w', edgecolor='w',"},{"action":"insertText","range":{"start":{"row":6,"column":84},"end":{"row":7,"column":0}},"text":"\r\n"},{"action":"insertLines","range":{"start":{"row":7,"column":0},"end":{"row":9,"column":0}},"lines":["        orientation='portrait', papertype=None, format=None,","        transparent=False, bbox_inches='tight', pad_inches=0.1) "]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":0},"end":{"row":9,"column":84}},"text":"savefig('explore_exploit_scatterheatmap.png', dpi=300, facecolor='w', edgecolor='w',"},{"action":"insertText","range":{"start":{"row":9,"column":84},"end":{"row":10,"column":0}},"text":"\r\n"},{"action":"insertLines","range":{"start":{"row":10,"column":0},"end":{"row":12,"column":0}},"lines":["        orientation='portrait', papertype=None, format=None,","        transparent=False, bbox_inches='tight', pad_inches=0.1) "]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":0},"end":{"row":12,"column":84}},"text":"savefig('explore_exploit_scatterheatmap.png', dpi=300, facecolor='w', edgecolor='w',"},{"action":"insertText","range":{"start":{"row":12,"column":84},"end":{"row":13,"column":0}},"text":"\r\n"},{"action":"insertLines","range":{"start":{"row":13,"column":0},"end":{"row":15,"column":0}},"lines":["        orientation='portrait', papertype=None, format=None,","        transparent=False, bbox_inches='tight', pad_inches=0.1) "]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":15,"column":0},"end":{"row":15,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1408633722695}